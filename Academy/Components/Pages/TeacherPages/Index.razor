@page "/teachers"
@rendermode InteractiveServer
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Components.QuickGrid
@using Academy.Models
@using Academy.Data
@implements IAsyncDisposable
@inject IDbContextFactory<Academy.Data.AcademyContext> DbFactory

<PageTitle>Index</PageTitle>


<h1>Преподаватели</h1>
<div style="display:flex; justify-content:space-between">
    <form action="/teachers" data-enhance data-permanent>
        <input type="search" name="teacherFilter" placeholder="Введите фамилию" />
        <input type="submit" value="Search" />
    </form>
    <div>
        <label for="teachers-per-page">Teachers per page:</label>
        <select id="teachers-per-page" @bind="pagination.ItemsPerPage">
            <option value="4">4</option>
            <option value="6">6</option>
            <option value="8">8</option>
        </select>
    </div>
</div>
<p>
    <a href="teachers/create">Create New</a>
</p>

<div>
    <QuickGrid Class="table" Items="FilteredTeachers" Pagination="pagination">
        <PropertyColumn Property="teacher => teacher.teacher_id" Title="№" Sortable="true" />
        <PropertyColumn Property="teacher => teacher.last_name" Title="Фамилия" Sortable="true" />
        <PropertyColumn Property="teacher => teacher.first_name" Title="Имя" Sortable="true" />
        <PropertyColumn Property="teacher => teacher.middle_name" Title="Отчество" Sortable="true" />
        <PropertyColumn Property="teacher => teacher.birth_date" Title="День рождения" Sortable="true" />
        @* <PropertyColumn Property="teacher => teacher.email" />
        <PropertyColumn Property="teacher => teacher.phone" Title="Телефон" />
        <PropertyColumn Property="teacher => teacher.photo" Title="Фото" /> *@
        <PropertyColumn Property="teacher => teacher.work_since" Title="Работает с" Sortable="true" />
        <PropertyColumn Property="teacher => teacher.rate" Title="Ставка" Sortable="true" />

        <TemplateColumn Context="teacher">
            <a href="@($"teachers/edit?teacher_id={teacher.teacher_id}")">Edit</a> |
            <a href="@($"teachers/details?teacher_id={teacher.teacher_id}")">Details</a> |
            <a href="@($"teachers/delete?teacher_id={teacher.teacher_id}")">Delete</a>
        </TemplateColumn>
    </QuickGrid>
</div>
<Paginator State="pagination"></Paginator>
@code {
    private AcademyContext context = default!;
    [SupplyParameterFromQuery]
    private string? TeacherFilter { get; set; }
    PaginationState pagination = new PaginationState { ItemsPerPage = 4 };
    private IQueryable<Teacher> FilteredTeachers =>
        context.Teachers.Where(t => t.last_name.Contains(TeacherFilter ?? string.Empty));

    protected override void OnInitialized()
    {
        context = DbFactory.CreateDbContext();
    }

    public async ValueTask DisposeAsync() => await context.DisposeAsync();
}
